version: '3.8'

networks:
  eztalo-network:
    name: eztalo-network
    driver: bridge

services:
  user-service-db:
    image: postgres:latest
    container_name: user-service-db
    #restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user-service
    ports:
      - "25431:5432"
    networks:
      - eztalo-network
    volumes:
      - user_service_data:/var/lib/postgresql/data

  task-service-db:
    image: postgres:latest
    container_name: task-service-db
    #restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task-service
    ports:
      - "25432:5432"
    networks:
      - eztalo-network
    volumes:
      - task_service_data:/var/lib/postgresql/data
  
  redis:
    image: redis:7
    container_name: redis
    volumes:
      - redis-data:/data
    networks:
      - eztalo-network
  
  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: http://localhost:8200
      VAULT_API_ADDR: http://127.0.0.1:8200
    volumes:
      - ./vault/vault-config.hcl:/vault/config/vault.hcl
      - ./vault/keys.json:/vault/config/keys.json
      - ./vault/unseal.sh:/vault/unseal.sh
      - vault-data:/vault/data
    entrypoint: vault server -config=/vault/config/vault.hcl
    cap_add:
      - IPC_LOCK
    networks:
      - eztalo-network
  
  vault-init:
    container_name: vault-init
    build:
      context: ./vault
      dockerfile: vault-init.Dockerfile
    depends_on:
      - vault
    volumes:
      - ./vault/vault-config.hcl:/vault/config/vault.hcl
      - ./vault/keys.json:/vault/config/keys.json
      - ./vault/unseal.sh:/vault/unseal.sh
      - ./vault/vault-init.sh:/vault/vault-init.sh
      - vault-data:/vault/data
    environment:
      VAULT_ADDR: http://vault:8200
    cap_add:
      - IPC_LOCK
    restart: "no"
    networks:
      - eztalo-network

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3200:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  user_service_data:
  task_service_data:
  vault-data:
    driver: local
  loki-data:
  grafana-storage:
  redis-data: